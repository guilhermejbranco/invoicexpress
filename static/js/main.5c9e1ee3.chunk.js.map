{"version":3,"sources":["components/List.js","components/Filter.js","components/Pagination.js","components/App.js","serviceWorker.js","index.js"],"names":["List","props","changeOrder","e","key","state","orderBy","reverseOrder","setState","isNaN","filteredDocuments","orderType","sort","a","b","localeCompare","parentData","this","reverse","dict","Final","Draft","Cancelled","Paid","keysElement","keys","push","className","onClick","bind","value","id","length","searchInput","map","document","i","number","currentPage","Component","Filter","filterBy","changeFilter","event","target","updateDocument","changeSearchInput","data","documents","String","toLowerCase","includes","client_name","parentCallback","result","type","placeholder","onChange","Pagination","parseInt","_handleKeyDown","keyCode","getElementById","activeElement","changePage","addEventListener","removeEventListener","page","Math","ceil","items","aria-label","cookies","Cookies","App","paginationCallbackFunction","childData","set","path","filterCallbackFunction","get","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c9e1ee3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/List.scss\";\nimport \"../styles/_variables.scss\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\n\nclass List extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredDocuments: props.parentData.filteredDocuments,\n      orderBy: \"client_name\",\n      orderType: \"desc\"\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    this.setState({ filteredDocuments: props.parentData.filteredDocuments });\n  }\n\n\n\t/*\n\tReverses the current order of the list.\n\t*/\n  reverseOrder() {\n    this.setState({\n      filteredDocuments: this.state.filteredDocuments.reverse()\n    });\n\n    if (this.state.orderType === \"asc\") {\n      this.setState({ orderType: \"desc\" });\n    } else {\n      this.setState({ orderType: \"asc\" });\n    }\n  }\n\n\t/*\n\tReceive the key which the user wants to order the list. If the list is already\n\tordered by that key, calls a function to reverse the order by that key.\n\t*/\n  changeOrder = (e, key) => {\n    if (e === this.state.orderBy) {\n      this.reverseOrder();\n    } else {\n      this.setState({ orderBy: e });\n      if (isNaN(this.state.filteredDocuments[0][e])) {\n        if (this.state.orderType === \"desc\") {\n          this.setState({filteredDocuments: this.state.filteredDocuments.sort((a, b) => a[e].localeCompare(b[e]))});\n        } else {\n          this.setState({filteredDocuments: this.state.filteredDocuments.sort((a, b) => b[e].localeCompare(a[e]))});\n        }\n      } else {\n        if (this.state.orderType === \"desc\") {\n          this.setState({filteredDocuments: this.state.filteredDocuments.sort((a, b) => b[e] - a[e])});\n        } else {\n          this.setState({filteredDocuments: this.state.filteredDocuments.sort((a, b) => a[e] - b[e])});\n        }\n      }\n    }\n  };\n\n  render() {\n    /*\n\t\tDictionary to translate the invoice status to bootstrap badge classes.\n\t\t*/\n    var dict = {\n      Final: \"badge-success\",\n      Draft: \"badge-secondary\",\n      Cancelled: \"badge-danger\",\n      Paid: \"badge-warning\"\n    };\n\n    /*\n\t\tCreate an array with columns elements with the invoice keys.\n\t\tThis will be the title in each column. Checks to see which of the keys is being\n\t\tused to order. Also, adds an up or down icon if the order is ascending or descending.\n\t\t*/\n    var keysElement = [];\n    var keys = [];\n\n    for (var key in this.state.filteredDocuments[0]) {\n      keysElement.push(\n        <div\n          className={\n            \"d-none d-md-block col-sm-2 col-md-2 font-weight-bold text-left border-0 text-uppercase pointer \" +\n            (key === this.state.orderBy ? \"primarycolor\" : \"\")\n          }\n          onClick={this.changeOrder.bind(this, key)}\n          value={key}\n          key={key}\n          id={key}\n        >\n          {key}\n          {key === this.state.orderBy && this.state.orderType === \"asc\" && (\n            <FaArrowUp />\n          )}\n\n          {key === this.state.orderBy && this.state.orderType === \"desc\" && (\n            <FaArrowDown />\n          )}\n        </div>\n      );\n      keys.push(key)\n    }\n\n    return (\n      <span className=\"w-100\">\n        <div className=\"list-group-item small border-0\">\n          <div className=\"row\">{keysElement}</div>\n        </div>\n\n        {/*\n\t\t\t\t\tIf there are no invoice in the filteredDocuments, display an error message.\n\t\t\t\t\t*/\n        this.state.filteredDocuments.length === 0 && (\n          <span className=\"small\">\n            No results found for\n            <span className=\"primarycolor font-weight-bold\">\n              {\" \"}\n              \"{this.props.parentData.searchInput}\"\n            </span>\n            .\n          </span>\n        )}\n        <ul className=\"list-group pb-2\">\n          {this.state.filteredDocuments.map((document, i) => {\n            return (\n              /*\n\t\t\t\t\t\t\tDisplay the li element, if the index is in between the valid page number.\n\t\t\t\t\t\t\t*/\n              <span key={document.number + i}>\n                {i >= (this.props.parentData.currentPage - 1) * 7 &&\n                  i < this.props.parentData.currentPage * 7 && (\n                    <li className=\"list-group-item text-left\">\n                      <div className=\"row small\">\n                        <div className=\"col-12 col-md-2 border-0\">\n\n                          <span className={\"badge \" + dict[document[keys[0]]]}>\n                            {document[keys[0]]}\n                          </span>\n                        </div>\n                        <div className=\"col-6 col-md-2\">\n                          <span className=\"d-block font-weight-bold d-md-none pt-3 mr-3\"> {[keys[1]]}: </span>\n                          <span> {document[keys[1]]}</span>\n                        </div>\n                        <div className=\"col-6 col-md-2\">\n                          <span className=\"d-block font-weight-bold d-md-none pt-3 mr-3\"> {[keys[2]]}: </span>\n                          {document[keys[2]]}\n                        </div>\n                        <div className=\"col-6 col-md-2\">\n                          <span className=\"d-block font-weight-bold d-md-none pt-3 mr-3\"> {[keys[3]]}: </span>\n                          {document[keys[3]]}\n                        </div>\n                        <div className=\"col-6 col-md-2\">\n                        <span className=\"d-block font-weight-bold d-md-none pt-3 mr-3\"> {[keys[4]]}: </span>\n                          {document[keys[4]]}\n                        </div>\n                        <div className=\"col-6 col-md-2 text-md-right\">\n                        <span className=\"d-block font-weight-bold d-md-none pt-3 mr-3\"> {[keys[5]]}: </span>\n                          {document[keys[5]]}\n                        </div>\n                      </div>\n                    </li>\n                  )}\n              </span>\n            );\n          })}\n        </ul>\n      </span>\n    );\n  }\n}\n\nexport default List;\n","import React, { Component } from \"react\";\nimport \"../styles/Filter.scss\";\nimport data from \"../assets/resources/documents\";\n\nclass Filter extends Component {\n\n\t/*\n\tFetch the data received from the parents in props.\n\t*/\n  state = {\n    filterBy: this.props.parentData.filterBy,\n    searchInput: this.props.parentData.searchInput,\n\t\torderBy: 'client_name',\n    filteredDocuments: []\n  };\n\n\t/*\n\tFunction to update the documents with the new searchInput and filter applied.\n\tAfter updating the documents propagates the new filteredDocuments to the parent,\n\twhich will later on send it to the other components.\n\t*/\n  updateDocument() {\n    var filteredDocuments = [];\n\n    for (var i = 0; i < data.documents.length; i++) {\n      if (\n        String(data.documents[i][this.state.filterBy])\n          .toLowerCase()\n          .includes(String(this.state.searchInput).toLowerCase())\n      ) {\n        filteredDocuments.push(data.documents[i]);\n      }\n    }\n\n\n    this.setState({ filteredDocuments: filteredDocuments.sort((a,b) => a.client_name.localeCompare(b.client_name)) }, () => {\n      this.props.parentCallback(this.state);\n    });\n  }\n\n\t/*\n\tFunction that gets called when the filter is changed by the user.\n\tThe new filter is setted in the component state, and the filteredDocuments is updated.\n\t*/\n  changeFilter = event => {\n    this.setState({ filterBy: event.target.value }, () => {\n      this.updateDocument();\n    });\n  };\n\n\t/*\n\tFunction that gets called when the searchInput is changed by the user.\n\tThe new searchInput is setted in the component state, and the filteredDocuments is updated.\n\t*/\n  changeSearchInput = event => {\n    this.setState({ searchInput: event.target.value }, () => {\n      this.updateDocument();\n    });\n  };\n\n\t/*\n\tAfter mounting, the component should update the filteredDocuments array, because\n\ta searchInput and a filterBy could be setted in the cookies.\n\t*/\n  componentDidMount() {\n    this.updateDocument();\n\n  }\n\n  render() {\n\n\t\t/*\n\t\tCreate an array of the keys available in the invoice documents.\n\t\t*/\n    var keys = [];\n    const result = data.documents[0];\n    for (var key in result) {\n      keys.push(key);\n    }\n\n    return (\n      <div className=\"row w-100 pt-2 pb-2 container \">\n        <div className=\"col-md-6\">\n          <h6 className=\"text-uppercase text-left mt-2\">\n            <span className=\"font-weight-light\">Documents</span>\n            <span className=\"font-weight-bolder\">Xpress</span>\n          </h6>\n        </div>\n\n        <div className=\"col-md-6\">\n          <div className=\"row\">\n            <div className=\"col col-md-6\">\n              <input\n                id=\"searchInput\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder={\"Searching by \" + this.state.filterBy}\n                onChange={this.changeSearchInput}\n                value={this.state.searchInput}\n              ></input>\n            </div>\n            <div className=\"col col-md-6\">\n              <select\n                id=\"filterBy\"\n                className=\"form-control form-control-sm h-100\"\n                onChange={this.changeFilter}\n                value={this.state.filterBy}\n              >\n                {keys.map((key, i) => {\n                  return (\n                    <option key={key + \"_\" + i} value={key}>\n                      {key}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport \"../styles/Pagination.scss\";\n\n// for other devs who might not know keyCodes\nvar NEXT_KEY = 39;\nvar PREVIOUS_KEY = 37;\n\nclass Pagination extends Component {\n\n  state = { currentPage: parseInt(this.props.parentData.currentPage) };\n\n  /*\n  Keydown function to change the page on -> and <- press. Increments and decrements\n  currentPage accordingly. Has to check if the input box is focused, in order to\n  block keydown events when the user is typing.\n  */\n  _handleKeyDown = event => {\n    switch (event.keyCode) {\n      case NEXT_KEY:\n        if (document.getElementById(\"searchInput\") !== document.activeElement) {\n          this.changePage(this.state.currentPage + 1);\n        }\n        break;\n      case PREVIOUS_KEY:\n        if (document.getElementById(\"searchInput\") !== document.activeElement) {\n          this.changePage(this.state.currentPage - 1);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Binds the keydown press to the handle function\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this._handleKeyDown);\n  }\n\n  // Removes the bind for the keydown press\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this._handleKeyDown);\n  }\n\n  /*\n  Changes the currentPage to the var page received. Has to check if the page received\n  is in between valid bounds. After changing the state, calls the parent callback function.\n  */\n  changePage(page) {\n    if (\n      page > 0 &&\n      page <= Math.ceil(this.props.parentData.filteredDocuments.length / 7)\n    ) {\n      this.setState(\n        {\n          currentPage: page\n        },\n        () => {\n          this.props.parentCallback(this.state);\n        }\n      );\n      return this.state.currentPage;\n    }\n  }\n\n  render() {\n\n    /*\n    After typing a searchInput, if a user is in the page 4 for example, and if the\n    pages get reduced to a number lower than 4,\n    the user has to be redirected to the biggest page.\n    */\n    if (\n      this.state.currentPage >\n      Math.ceil(this.props.parentData.filteredDocuments.length / 7)\n    ) {\n      this.changePage(\n        Math.ceil(this.props.parentData.filteredDocuments.length / 7)\n      );\n    }\n\n    /*\n    Generates the li items for the numbers in the pagination element. If the currentPage\n    is equal to i, the class active is added in order to give it a distinct background.\n    */\n    var items = [];\n\n    for (\n      var i = 1;\n      i <= Math.ceil(this.props.parentData.filteredDocuments.length / 7);\n      i++\n    ) {\n        items.push(\n          <li className={\"page-item \" + (this.state.currentPage === i ? ' active' : '')} key={i}>\n            <button\n              className=\"page-link \"\n              onClick={this.changePage.bind(this, i)}\n            >\n              {i}\n            </button>\n          </li>\n        );\n\n      }\n\n    return (\n      <nav aria-label=\"Page navigation example\" className=\"float-right \">\n        <ul className=\"pagination\">\n          <li\n            className={\n              \"page-item\" + (this.state.currentPage === 1 ? \" disabled\" : \"\")\n            }\n          >\n            <button\n              id=\"previous-page\"\n              className=\"page-link\"\n              onClick={this.changePage.bind(this, this.state.currentPage - 1)}\n            >\n              Previous\n            </button>\n          </li>\n          {items}\n          <li\n            className={\n              \"page-item\" +\n              (this.state.currentPage ===\n              Math.ceil(this.props.parentData.filteredDocuments.length / 7)\n                ? \" disabled\"\n                : \"\")\n            }\n          >\n            <button\n              id=\"next-page\"\n              className=\"page-link\"\n              onClick={this.changePage.bind(this, this.state.currentPage + 1)}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Pagination;\n","import React, { Component } from \"react\";\nimport \"../styles/App.scss\";\nimport List from \"./List\";\nimport Filter from \"./Filter\";\nimport Pagination from \"./Pagination\";\nimport Cookies from \"universal-cookie\";\n\n\nconst cookies = new Cookies();\n\nclass App extends Component {\n\n  /*\n  Transversal variables for every component.\n  filterBy: The invoice field which will be filtered by. (Default value: \"client_name\")\n  searchInput: The string that the user inserts to filter the invoices\n  currentPage: Page that the user currently is on.\n  filteredDocuments: Array of the invoices filtered by filterBy and searchInput.\n  */\n  state = {\n    filterBy: \"client_name\",\n    searchInput: \"\",\n    currentPage: 1,\n    filteredDocuments: []\n  };\n\n  /*\n  Callback function for the Pagination component. Gets called when the currentPage is changed.\n  Updates the cookie \"currentPage\" in order to maintain state.\n  */\n  paginationCallbackFunction = childData => {\n    this.setState({ currentPage: childData.currentPage });\n    cookies.set(\"currentPage\", childData.currentPage, { path: \"/\" });\n  };\n\n  /*\n  Callback function for the Filter component. Gets called when the\n  filteredDocuments or searchInput have changed.\n  Updates the cookie \"searchInput\" and \"filterBy\" in order to maintain state.\n  */\n  filterCallbackFunction = childData => {\n    this.setState({\n      filteredDocuments: childData.filteredDocuments,\n      searchInput: childData.searchInput,\n      filterBy: childData.filterBy\n    });\n    cookies.set(\"searchInput\", childData.searchInput, { path: \"/\" });\n    cookies.set(\"filterBy\", childData.filterBy, { path: \"/\" });\n  };\n\n  /*\n  Before mounting, checks if there are saved cookies in the browser. If so,\n  sets the state to said cookies.\n  */\n  UNSAFE_componentWillMount() {\n    if (cookies.get(\"filterBy\") != null) {\n      this.setState({ filterBy: cookies.get(\"filterBy\") });\n    }\n\n    if (cookies.get(\"searchInput\") != null) {\n      this.setState({ searchInput: cookies.get(\"searchInput\") });\n    }\n\n    if (cookies.get(\"currentPage\") != null) {\n      this.setState({ currentPage: cookies.get(\"currentPage\") });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header pt-3 pb-3\">\n          <Filter\n            parentData={this.state}\n            parentCallback={this.filterCallbackFunction}\n          ></Filter>\n        </header>\n        <div className=\"container mt-5\">\n          <List\n            parentData={this.state}\n          ></List>\n          <Pagination\n            parentData={this.state}\n            parentCallback={this.paginationCallbackFunction}\n          ></Pagination>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}